# Eine Übersicht über `R` 

```{r}
#| echo: false
#| warning: false
#| message: false
source('_common.R')
knitr::opts_chunk$set(
  prompt=TRUE
)
```
## Konzeption und Programmierparadigmen

Bei der Programmiersprache `R` handelt es sich um eine interpretierte Programmiersprache. Inpretiert bedeutet, dass `R` Programmierbefehle direkt ausführt, intepretiert. Dies steht im Gegensatz zu kompilierten Programmiersprachen (z.B. C++) bei denen gesamte Programm zunächst von einem Compiler in Maschinenbefehle übersetzt wird. Wenn eine Programmiersprache interpretiert wird, hat dies den Vorteil, dass die Arbeit besser interaktiv durchgeführt werden kann. D.h. als Anwenderin können, je nach Bedarf, einzelne Befehle oder größere zusammenhängende Befehle, an `R` übergeben werden und sie werden direkt ausgeführt und `R` liefert das Ergebnis zurück. Insbesondere bei der Datenverarbeitung vereinfacht diese Vorgehensweise die Arbeit ungemein. So können Daten per trial-and-error schnell angepasst, transformiert oder graphisch bzw. deskriptiv dargestellt werden. Der Hauptnachteil von interpretierten Programmiersprachen ist, dass durch die Abarbeitung der einzelnen Befehle bestimmte Ausführungsoptimierungen durch `R` nicht angewendet werden können. Dies hat zur Folge, dass die Ausführungszeit, d.h. die Zeit die ein Programm benötigt um seine Aufgaben zu erledigen im Vergleich zu kompilierten Programmiersprachen zum Teil deutlich länger sein kann. In `R` kann dieser Nachteil jedoch durch die Einbindung von bestimmten Paketen (was ein Paket ist werden wir gleich sehen), die in anderen Programmiersprachen erstellt wurden und entsprechend optimiert wurden, in vielen Fällen umgegangen werden.

## Ressourcen und Hilfestellungen zu `R` finden

War es in den Anfangszeiten von `R` noch teilweise schwierig Hilfe bei auftretenden Problemen zu bekommen, hat sich dies in den letzten 10-15 Jahren glücklicherweise dramatisch geändert. Durch die etwas unglückliche Namensgebung `R` gab es beispielweise zunächst Probleme bei der Suche nach Problemlösungen, da die Suchmaschinen mit dem Buchstaben `R` wenig anfangen konnten. Im Internet finden sich jetzt allerdings zahllose überaus aktive Communities rund um R, mit ausführlichen Blogs, Podcasts, Youtube-Sammlungen und Programmierhilfen für alle möglichen Fragen und Probleme. Zwei sehr gute Quellen sind Stack Overflow bei denen oft schon mittels eines Google ein Treffer gefunden wird oder ChatGPT. Zudem ist die Menge an Büchern um und über `R` in den letzten Jahren geradezu explodiert. Mit eigenen Serien zur Datenanalyse mit R (Springer Use R!, CRC The R-Series) und zahllosen weiteren wissenschaftlichen Büchern mit mindestens Code-Beispielen in R bis hin zu frei verfügbaren Sammlungen hochqualitativer, wissenschaftlicher Bücher zu R (bookdown.org) lassen sich heutzutage relativ niedrigschwellig sehr gute `R`-skills aufbauen.

## R Community und Pakete

Eine treibende Kraft bei der Weiterentwicklung und Weiterverbreitung von R ist die riesige Gemeinschaft von Anwenderinnen und Programmiererinnen. Dadurch das R im Kern eine vollständige Programmiersprache ist, kann die Funktionalität von R ständig erweitert und individuellen Bedürfnissen angepasst werden. Neue Funktionalität wird in R im Rahmen von sogenannten Paketen (alternativ Bibliotheken) gebündelt. Durch diese Pakete können neue Befehle durch neudefinierte Funktionen in R zugänglich gemacht werden.

R Pakete werden über das Comprehensive `R` Archive Network (kurz CRAN) verteilt. CRAN ist ein internationales Netzwerk von Webservern auf denen `R` Pakete gespeichert werden und das das einfache Herunterladen aus `R` heraus ermöglicht. Die auf CRAN gespeicherte Pakete folgen alle einer streng definierten Struktur und durchlaufen eine Qualitätskontrolle. Die Weiterentwicklung bzw. weitere Anpassung wird durch sogenannte Maintainer (Entwickler) sichergestellt. Während die Anzahl an Zusatzpaketen am Anfang von `R` noch relativ übersichtlich war, liegt die derzeitige Anzahl an `R` Paketen auf CRAN bei 19900 (Stand 08.2023) mit Tendenz steigend. Da sich Datenanalysen über verschiedenen Disziplinen und Anwendungsfälle im Grund genommen immer wieder ähneln besteht daher eine hohe Wahrscheinlichkeit das auch für ungewöhnliche Anwendungsfälle bereits bestehende Pakete und Zusatzfunktionen in `R` zur Verfügung stehen. Daher besteht für den Großteil von Anwenderinnen oftmals gar nicht mehr die Notwendigkeit kompliziertere Programmieraufgaben selbst durchzuführen. Sondern, durch die Suche nach einem geeigneten Paket, können auftauchende Problem schnell gelöst werden. Dies führt ebenfalls dazu, dass die Einstiegshürde für den Umgang mit `R` sehr niedrig ist.

## `R` und R-Studio

Heutzutage wird `R` praktisch nur noch über die Entwicklungsumgebung R-Studio verwendet. R-Studio stellt dabei eine ganze Reihe von Werkzeugen zur Verfügung die den Umgang mit `R` deutlich vereinfachen. `R` tritt dann eigentlich nur noch im Hintergrund bei der Ausführung von Befehlen in Aktion. Vor allem der Editor um Skripte zu erstellen und die einfache Möglichkeit Projekte anzulegen vereinfachen die Arbeit mit `R` am Anfang doch deutlich.

Im Rahmen des vorliegenden Kurses werden wir entsprechend auch auschließlich mit R-Studio arbeiten und Vanilla-`R` ignorieren, bzw. wenn wir `R` schreiben eigentlich immer R-Studio meinen. Für euch ist es allerdings wichtig zu wissen, dass `R` installiert sein muss damit R-Studio auch wirklich funktionsfähig ist.

## Weiterführendes

Die im weiteren Verlauf des Skripts kommenden Beispiele und Erklärungen dienen nur um einen allerersten Überblick über die Arbeit mit `R` zu gewinnen. D.h. die Inhalte beschränken sich auf die Konzepte, die für den Umgang mit `R` im späteren Verlauf dieses Statistikkurses benötigt werden. Wie schnell ersichtlich werden wird, besteht eine der Herausforderungen den Umgang mit `R` zu erlernen, darin die notwendigen Befehle und Funktionen zu kennen. Daher werden sich die ersten Schritte mit `R` ähnlich dem Erlernen einer neuen Sprache anfühlen. Das Schöne ist jedoch, `R` eignet sich hervorragend als erste Programmiersprache. In der heutigen Zeit in jedem Fall eine gute Investition in die eigene Zukunft.

Wer im weiteren Verlauf merkt, dass es ihr Spaß macht mit `R` zu arbeiten und gerne noch weitere Fertigkeiten für den Umgang mit `R` erlernen möchte, der findet mittlerweile zahlreiche sehr gute Quellen im Internet. Wer lieber was in der Hand haben möchte, für den Einstieg sind die beiden klassischen Büchern @chambers2008 und @dalgaard2008 empfehlenswert von denen es auch immer günstige gebrauchte Versionen gibt. Etwas modernere Einführungen sind in  @peng2016 und  @wickham2023, zu finden, wobei es beiden Bücher auch als freie online-Versionen gibt ([peng](https://bookdown.org/rdpeng/rprogdatascience/){target="_blank"}, [wickham](https://r4ds.had.co.nz/){target="_blank"}). Überhaupt eignet sich die Seite [bookdown.org](https://bookdown.org/){target="_blank"} als gute Anlaufstelle für verregnete Tage am Schreibtisch.

# Split-plot Design 

```{r}
#| echo: false
#| warning: false
#| message: false
source('_common.R')
```

```{r}
require(tidyverse)
require(knitr)
require(emmeans)
require(lme4)
```


```{r defs_sp}
my_tbl <- function(df, ...) {
  knitr::kable(df,
               booktabs = TRUE,
               digits = 2,
               linesep = '',
               ...)
}
```

```{r split_plot_defs}
n <- 10
sigma <- 1
df_1 <- tibble(
  id = rep(paste0('S', 1:20), 3),
  time = factor(rep(0:2, each=2*n), levels=0:2,
                labels = c('Pre','Post','Ret')),
  group = rep(rep(c('CON','TRT'), each=n), 3),
  CMJ = rnorm(6*n,
              mean = rep(c(20,20,21, 25, 20, 23), each=10),
              sd = sigma)
)
s2f <- function(str) unlist(strsplit(as.character(str),""))
```

## Farming

```{r}
#| layout-ncol: 2
#| out-width: "80%"

include_graphics('pics/irrigation.jpg')
include_graphics('pics/fertilizer.jpg')
```


## CRD

```{r}
#| layout-ncol: 3
#| label: fig-ed-spd-01
#| fig-cap: "Beispiele fÃ¼r verschiedene Designs."
#| fig-subcap:
#|   - "CRD"
#|   - "CRBD"
#|   - "Split-plot design"

tibble(x = rep(1:4,2),
             y = rep(c(1,3),each=4),
             g = s2f(21112122),
             x2 = x,
             y2 = y,
             labels = s2f('BABBAABA')) |> 
ggplot(aes(x, y, fill=g)) + 
  geom_tile(width=.9, height=1.9, color='black') +
  lims(x = c(0,5), y = c(0,4)) +
  coord_equal() + 
  scale_fill_manual('Irrigation',
                    breaks = c(1,2),
                    labels = c('high', 'low'),
                    values = c('deepskyblue','darkturquoise')) +
  geom_text(aes(x2,y2,label = labels), size=8) +
  theme_void() +
  labs(title = 'CRD')
tibble(x = rep(1:4,2),
             y = rep(c(1,3),each=4),
             g = s2f(21211221),
             x2 = x,
             y2 = y,
             labels = s2f('BAABAABB')) |> 
ggplot(aes(x, y)) + 
  geom_tile(data = tibble(x = c(2.5,2.5), y=c(1,3)), width=5, height=1.95, fill='gray') +
  geom_tile(aes(fill=g), width=1, height=1.8, color='black') +
  coord_equal() +
  scale_fill_manual('Irrigation',
                    breaks = c(1,2),
                    labels = c('high', 'low'),
                    values = c('deepskyblue','darkturquoise')) +
  geom_text(aes(x2,y2,label = labels), size=8) +
  theme_void() +
  labs(title = 'RCBD')
tibble(x = rep(c(1,2,3.3,4.3),2),
             y = rep(c(1,3),each=4),
             g = s2f(11112222),
             x2 = x,
             y2 = y,
             labels = s2f('BABAABBA')) |> 
ggplot(aes(x, y)) + 
  geom_tile(aes(fill=g),
            width=1, height=1.8, color='black') +
  annotate('text', x = 1, y = .5, label = 'sub plot', size=2) +
  annotate('text', x = 2, y = .5, label = 'sub plot', size=2) +
  annotate('text', x = 1, y = 0, label = 'whole plot', size=2) +
  coord_equal() +
  scale_fill_manual('Irrigation',
                    breaks = c(1,2),
                    labels = c('high', 'low'),
                    values = c('deepskyblue','darkturquoise')) +
  geom_text(aes(x2,y2,label = labels), size=8) +
  theme_void() +
  labs(title = 'Split plot + CRBD')
```

## Example - Soccer

Das folgende hypothetische Beispiel ist adaptiert nach Kowalski et al. (2007)]

```{r}
df <- read_delim(
  "game;pitch;twogoals;nplayer;ntouches;eps\n1;1;-1;1;1;68.5\n1;1;1;-1;1;66.8\n1;1;-1;-1;-1;58.5\n1;1;1;1;1;70.8\n1;1;-1;1;-1;61.3\n1;1;1;-1;-1;51.9\n1;1;-1;-1;1;59.5\n1;1;1;1;-1;66.2\n2;-1;1;-1;-1;57.4\n2;-1;1;-1;1;57.5\n2;-1;-1;1;-1;56.5\n2;-1;1;1;1;63.9\n2;-1;-1;1;1;56.4\n2;-1;1;1;-1;58.1\n2;-1;-1;-1;1;53.2\n2;-1;-1;-1;-1;59.5\n3;-1;-1;-1;-1;66.6\n3;-1;-1;-1;1;63.9\n3;-1;1;1;-1;62.6\n3;-1;1;1;1;63.2\n3;-1;-1;1;-1;56.1\n3;-1;1;-1;1;63.3\n3;-1;-1;1;1;62.7\n3;-1;1;-1;-1;65\n4;1;-1;-1;-1;59.5\n4;1;1;1;-1;64\n4;1;-1;1;1;68\n4;1;1;-1;-1;65.6\n4;1;-1;1;-1;58.6\n4;1;1;1;1;73.3\n4;1;1;-1;1;61.5\n4;1;-1;-1;1;64.2\n",
  delim = ';'
)
df <- df |> 
  mutate(
    game = paste0('G',game),
    pitch = factor(pitch, levels = c(-1,1), labels=c("small","large")),
    twogoals = factor(twogoals, levels=c(-1,1), labels=c("yes","no")),
    nplayer = factor(nplayer, levels=c(-1,1), labels=c('5p','6p')),
    ntouches = factor(ntouches, levels=c(-1,1), labels=c('restricted','free')))
```

```{r}
head(df) |> kable(booktabs = TRUE,
                  linesep = "")
```

## Example - Soccer

```{r}
#| fig-cap: "Data from full Experiment"

ggplot(df, aes(pitch, eps, color=twogoals)) +
  geom_point() +
  facet_grid(nplayer~ntouches) +
  labs(x = 'Pitch size', y = 'EPS')
```

## Whole-plot analysis

```{r}
df_bars <- df |> group_by(game) |> summarize(eps = mean(eps), pitch = pitch[1])
```

```{r}
#| fig-cap: "Average EPS for each game."
ggplot(df_bars, aes(pitch, eps)) +
  geom_point() +
  labs(x = 'Pitch size', y = 'EPS')
```

## Whole-plot analysis Analysis of variance

```{r}
df_bars |> kable(booktabs=TRUE, digits=2)
```

```{r}
#| echo: true

mod_whole_plot <- aov(eps ~ pitch, df_bars)
summary(mod_whole_plot)
```

## Error components split-plot analysis

```{r}
#| out-width: "90%"
#| fig-cap: "Error components in a split-plot analysis"

include_graphics('pics/split_plot_error.png')
```


## Complete Split-plot analysis

```{r}
#| echo: true 
mod_sp <- aov(eps ~ (pitch+nplayer+twogoals+ntouches)^2 + Error(game), df)
summary(mod_sp)
```


## Model

\begin{align*}
Y_{hij} &= \mu + \alpha_i + \epsilon_{i(h)}^W \\
& + \beta_j + (\alpha\beta)_{ij} + \epsilon_{j(hi)}^S
\end{align*}

| $\epsilon_{i(h)}^W \sim \mathcal{N}(0,\sigma_{W}^2)$
| $\epsilon_{jt(hi)}^S \sim \mathcal{N}(0,\sigma_s^2)$
| $h=1,\ldots,s$
| $i=1,\ldots,a$
| $j=1,\ldots,b$

## A more common example 

```{r}
#| fig-cap: "Hypothetical two-arm RCT"
 
ggplot(df_1, aes(time, CMJ, fill=group)) +
  geom_boxplot() +
  geom_point(color='yellow', position=position_dodge(.7), alpha=.8) +
  scale_fill_discrete('Group') +
  labs(x = 'Zeit') 
```

## Data structure

```{r}
knitr::kable(df_1[c(1:2, 11, 21, 31, 43, 54),],
             booktabs= T,
             caption="Ausschnitt der Daten",
             linesep = '',
             digits = 1)
```

## Model

\begin{align*}
Y_{hij} &= \mu + \theta_h + \alpha_i + \epsilon_{i(h)}^W \\
& + \beta_j + (\alpha\beta)_{ij} + \epsilon_{j(hi)}^S
\end{align*}

| $\epsilon_{i(h)}^W \sim \mathcal{N}(0,\sigma_{W}^2)$
| $\epsilon_{jt(hi)}^S \sim \mathcal{N}(0,\sigma_s^2)$
| $h=1,\ldots,s$
| $i=1,\ldots,a$
| $j=1,\ldots,b$

## Split-plot analysis 

\scriptsize
```{r}
#| echo: true

mod <- aov(CMJ ~ group*time + Error(id), df_1)
summary(mod)
```

## Again, standard analysis is not correct!

\small
```{r}
#| echo: true

mod_falsch <- aov(CMJ ~ id + group*time, df_1)
summary(mod_falsch)
```

## Alternative analysis using mixed models

\small
```{r}
#| echo: true

mod_lmer <- lmer(CMJ ~ time*group + (1|id), df_1)
anova(mod_lmer)
```


## Effect size 

\begin{align*}
\hat{\omega}^2_{\text{between}} &= \frac{SS_A -(a-1)MS_{S/A}}{SS_A + SS_{S/A}+MS_{S/A}} \\
\hat{\omega}^2_{\text{within}} &= \frac{(b-1)(MS_b - MS_{B\times S/A})}{SS_B + SS_{B\times S/A}+SS_{S/A}+MS_{S/A}} \\
\hat{\omega}^2_{AB} &= \frac{(a-1)(b-1)(MS_{AB}-MS_{B\times S/A})}{SS_{AB}+SS_{B\times S/A}+MS_{S/A}}
\end{align*}

| $A=$`group`, $B=$`time`, $AB=$`group:time`, $S/B=$`Error: id`, $B\times S/A=$`Error: within` im Beispiel

## Effect size in `R`

```{r}
#| echo: true

effectsize::omega_squared(mod)
```


## Multiple comparisons

\tiny
```{r}
#| echo: true

mod_em <- emmeans(mod, ~time*group)
pairs(mod_em)
```

## Which comparisons are meaninful?! 

\small
```{r}
#| echo: true

mod_em2 <- emmeans(mod, ~time|group)
pairs(mod_em2)
```


## Further reading

### Allgemein
@kutner2005[p.1172], @kowalski2007, @pos_split_plot

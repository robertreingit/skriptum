{"title":"Integration von nominale Variablen","markdown":{"headingText":"Integration von nominale Variablen","containsRefs":false,"markdown":"\n```{r}\n#| echo: false\n#| warning: false\n#| message: false\nsource('_common.R')\n```\n\n\n```{r defs_dummy}\nN <- 30\nset.seed(123)\nheight <- tibble::tibble(cm = rnorm(2*N,rep(c(180,167),each=N),10),\n                 gender = factor(rep(c('m','f'),each=N)))\nN <- 20\nK <- 4\nset.seed(1)\ndata <- tibble::tibble(\n  group = gl(K, N, labels = c('A','B','C','D')),\n  rt = rnorm(K * N, mean = rep(seq(500,800,100), each=N), sd = 50)\n)\n```\n\n## Beispiel: Körpergröße bei Frauen und Männern\n\n```{r}\n#| fig.cap: \"Simulierte Daten: Verteilung von Körpergrößen nach Geschlecht\"\n\nggplot(height, aes(gender,cm)) + \n  see::geom_violindot(size_dots=20, fill_dots='red') +\n  labs(x = 'Gender', y = 'Körpergröße[cm]') \n```\n\n## Datensatz\n\n\n```{r}\nheight[c(1:3,31:33),] |> \n  knitr::kable(\n    booktabs = T,\n    caption = \"Ausschnitt aus den Daten\",\n    digits = 1,\n    linesep = ''\n  )\n```\n\n```{r}\nx_hat <- height |> dplyr::group_by(gender) |>\n  dplyr::summarize(m = round(mean(cm),1), sd = round(sd(cm),1))\nknitr::kable(x_hat, format ='latex', booktabs=TRUE,\n             caption = \"Deskriptive Werte\")\n```\n\n\n## Nominale Variablen in `R`\n\nNominale Variablen werden in `R` als `factor()` dargestellt.\n\n```{r}\n#| echo: true\ngender <- factor(c(0,0,1,1),\n                 levels = c(0,1),\n                 labels = c('m','f'))\ngender\n```\n^[Viele Funktionen in `R` transformieren eine Vektor mit Zeichenketten in einen `factor()` um. z.B. `factor(c('m','m','f','f'))`]\n\n## t-Test in `R` mit `t.test()`\n\n```{r}\n#| echo: true\n#| eval: false\nt.test(cm ~ gender, data=height, var.equal=T)\n```\n```{r}\nnice_ttest(t.test(cm ~ gender, data=height, var.equal=T))\n```\n\n\n## Modellformulierung beim t-Test $(n_w = n_m)$\n\n\\small\n\\begin{align*}\nY_{if} &= \\mu_{f} + \\epsilon_{if}, \\quad \\epsilon_{if} \\sim \\mathcal{N}(0,\\sigma^2) \\\\\nY_{im} &= \\mu_{m} + \\epsilon_{im}, \\quad \\epsilon_{im} \\sim \\mathcal{N}(0,\\sigma^2)\n\\end{align*}\n\n### Hypothesen\n\\begin{align*}\nH_0&: \\delta = 0 \\\\\nH_1&: \\delta \\neq 0\n\\end{align*}\n\n### Teststatistik\n$$\nt = \\frac{\\bar{y}_m - \\bar{y}_w}{\\sqrt{\\frac{s_m^2 + s_w^2}{2}}\\sqrt{\\frac{2}{n}}}\n$$\n\n### Referenzverteilung\n$$\nt \\sim t_{df=2n-2}\n$$\n\n```{r}\n#| fig.cap: \"t-Verteilung mit $df=58$\"\n\nn_fig_pts <- 100\nt_dist <- tibble::tibble(\n  x = seq(-3,3,length.out=n_fig_pts),\n  t = dt(x,58)\n) \nggplot(t_dist, aes(x,t)) +\n  geom_ribbon(aes(ymin=0, ymax=t), alpha=0.3, fill='red') +\n  geom_line() + \n  labs(x = 't-Werte', y = 'Dichte') \n```\n\n## Kann ich aus dem t-Test ein lineares Modell machen? \n\n\n### t-Test\n\\begin{align*}\nY_{if} &= \\mu_{f} + \\epsilon_{if}, \\quad \\epsilon_{if} \\sim \\mathcal{N}(0,\\sigma^2) \\\\\nY_{im} &= \\mu_{m} + \\epsilon_{im}, \\quad \\epsilon_{im} \\sim \\mathcal{N}(0,\\sigma^2) \\\\\nt &= \\frac{\\bar{y}_m - \\bar{y}_w}{\\sqrt{\\frac{s_m^2 + s_w^2}{2}}\\sqrt{\\frac{2}{n}}} \\\\\nt &\\sim t_{df=2n-2}\n\\end{align*}\n\n### Lineares Modell\n\\begin{align*}\nY_i &= \\beta_0 + \\beta_1 \\times x_i + \\epsilon_i \\\\\n\\Delta_m &= \\mu_m - \\mu_f \\\\\nY_i &= \\beta_0 + \\beta_1 \\times x_{??} + \\epsilon_i \\\\\nY_i &= \\mu_f + \\Delta_{m} \\times x_{??} + \\epsilon_i \n\\end{align*}\n\n## Dummy- oder Indikatorkodierung \n\n\\begin{align*}\nY_i &= \\mu_f + \\Delta_{m} \\times x_{1i} + \\epsilon_i \\\\\n\\Delta_m &= \\mu_m - \\mu_f \\\\\nx_1 &= \n\\begin{cases}\n0\\text{ wenn weiblich}\\\\\n1\\text{ wenn männlich}\n\\end{cases} \n\\end{align*}\n\nFür eine nominale Variable wird eine Indikatorvariablen (Dummyvariable) definiert. Über diese Indikatorvariable kann die Zugehörigkeit eines Messwerts $Y_i$ zu einer Faktorstufe $k$ bestimmt werden. Eine Faktorstufe ist dabei immer die Referenzstufe bei der die Indikatorvariable gleich $0$ ist.\n\n\n## Einfach mal stumpf in `lm()` eingeben\n\n```{r}\n#| eval: false\n#| echo: true\n\nmod <- lm(cm ~ gender, height)\n```\n```{r}\nmod <- lm(cm ~ gender, height)\nlm_tbl_knitr(mod)\n```\n^[`R` gibt die Faktorstufe nach dem Namen des Faktors an. Im Beispiel steht `genderm` für Stufe `m` im Faktor `gender`.]\n\n## Vergleich der Konfidenzintervalle\n\n### Lineares Modell\n```{r}\n#| echo: true\nconfint(mod)\n```\n### t-Test\n```{r}\n#| echo: true\nt.test(cm ~ gender,\n       data = height,\n       var.equal=T)$conf\n```\n\n\n^[Mit `t.test()$conf.int` kann auf das berechnete Konfidenzintervall zugegriffen werden.]\n\n## Auf welchen Werten wird ein lineares Modell gerechnet???\n\n```{r}\ncbind(height, (0:1)[as.numeric(height$gender)])[c(1:3,41:43),] |> \n  knitr::kable(booktabs = TRUE,\n               col.names = c('cm', 'gender', '$x_1$'),\n               row.names = F,\n               escape = F,\n               linesep = '',\n               caption = \"Repräsentation der Faktorvariablen\",\n               digits = 2)\n```\n\n## Residuen\n\n```{r}\n#| fig.cap: \"Residuen\"\n\nheight |> dplyr::mutate(y_hat = predict(mod),\n                 e_hat = resid(mod)) |> \n  ggplot(aes(y_hat, e_hat)) +\n  geom_point() +\n  geom_hline(yintercept = 0, col = 'red', linetype = 'dashed') +\n  labs(x = expression(paste('Vorhergesagte Werte ', hat(y)[i])),\n       y = expression(paste('Residuen ', hat(e)[i]))) \n```\n\n\n## Wen's interessiert - t-Wert\n\nSeien beide Gruppen gleich groß ($n$) mit $N = n_m + n_w = 2 \\times n$. Der t-Wert für $\\beta_1$ berechnet sich aus $t = \\frac{b_1}{s_b}$ mit:\n\n$$\ns_b = \\sqrt{\\frac{\\sum_{i=1}^N (y_i - \\bar{y})^2}{N-2}\\frac{1}{\\sum_{i=1}^N(x_i-\\bar{x})^2}}\n$$\nDadurch, das die $x_i$ entweder gleich $0$ oder $1$ sind, ist $\\bar{x}=0.5$ und die Abweichungsquadrate im zweiten Term sind alle gleich $\\frac{1}{4}$.\n\n$$\n\\sum_{i=1}^N(x_i - \\bar{x})^2=\\sum_{i=1}^N\\left(x_i - \\frac{1}{2}\\right)^2 = \\sum_{i=1}^N\\frac{1}{4}=\\frac{N}{4}=\\frac{2n}{4}=\\frac{n}{2}\n$$\n\nDer ersten Term kann mit etwas Algebra und der Definition für die Stichprobenvarianz $s^2$ auf die gewünschte Form gebracht werden.\n\n$$\n\\frac{\\sum_{i=1}^N(y_i-\\hat{y})^2}{N-2}=\\frac{\\sum_{i=1}^n(\\overbrace{y_{im} - \\bar{y}_m}^{Männer})^2+\\sum_{i=1}^n(\\overbrace{y_{iw}-\\bar{y}_w}^{Frauen})^2}{2(n-1)}=\\frac{(n-1)s_m^2+(n-1)s_w^2}{2(n-1)}=\\frac{s_m^2+s_w^2}{2}\n$$\n\n\n## Wen's interessiert - $\\beta_1 = \\mu_w - \\mu_m$\n\nMit $s_x^2 = \\frac{N\\frac{1}{4}}{N-1} = \\frac{N}{4(N-1)}$\n\\begin{align*}\n    b_1 &= \\frac{cov(x,y)}{s_x^2} \\\\\n    &= \\frac{\\sum_{i=1}^N(y_i - \\bar{y})(x_i - \\bar{x})}{N-1} \\frac{4(N-1)}{N} \\\\\n    &= 4\\frac{\\sum_{i=1}^n(y_{im}-\\bar{y})\\frac{-1}{2}+\\sum(y_{iw}-\\bar{y})\\frac{1}{2}}{N} \\\\\n    &= \\frac{4}{2}\\frac{\\sum_{i=1}^n(y_{iw}-\\bar{y}) - \\sum_{i=1}^n(y_{im}-\\bar{y})}{2n} \\\\\n    &= \\frac{\\sum_{i=1}^n y_{iw}}{n} - \\frac{n\\bar{y}}{n} - \\frac{\\sum_{i=1}^n y_{im}}{n} + \\frac{n\\bar{y}}{n} \\\\\n    &= \\bar{y}_w - \\bar{y}_m = \\Delta\n\\end{align*}\n\n## Wen's interessiert - $\\beta_0 = \\mu_m$\n\nMit $b_1 = \\Delta = \\bar{y}_w - \\bar{y}_m$:\n\\begin{align*}\nb_0 &= \\bar{y} - \\Delta \\times \\bar{x} \\\\\n&= \\frac{\\sum_{i=1}^N y_i}{N} - \\Delta \\times \\frac{1}{2} \\\\\n&= \\frac{\\sum_{i=1}^n y_{im} + \\sum_{i=1}^n y_{iw}}{2n} - \\frac{1}{2}(\\bar{y}_w - \\bar{y}_m)  \\\\\n&= \\frac{1}{2}\\frac{\\sum_{i=1}^ny_{im}}{n} + \\frac{1}{2}\\frac{\\sum_{i=1}^ny_{iw}}{n} - \\frac{1}{2}\\bar{y}_w + \\frac{1}{2}\\bar{y}_m \\\\\n&= \\frac{1}{2}\\bar{y}_m + \\frac{1}{2}\\bar{y}_w - \\frac{1}{2}\\bar{y}_w + \\frac{1}{2}\\bar{y}_m \\\\\n&= \\bar{y}_m\n\\end{align*}\n\n## Können auch mehr als zwei Stufen verwendet werden?\n\n```{r}\n#| fig.cap: \"Ein Reaktionszeitexperiment mit vier Stufen A, B, C und D\"\n\nggplot(data, aes(group, rt)) + geom_boxplot() +\n  geom_point(alpha=.1, col='red') +\n  labs(x = 'Gruppe', y = 'Reaktionszeit') \n```\n\n## Deskriptive Daten\n\n```{r}\ntmp <- data |> dplyr::group_by(group) |>\n  dplyr::summarize(y_hat = mean(rt), sd = sd(rt))\nmat <-  t(matrix(c(-1,1,0,0,-1,0,1,0,-1,0,0,1),nr=4))\ntmp |> dplyr::mutate(delta = c(NA,mat %*% y_hat)) |>\n  knitr::kable(booktabs = TRUE,\n               col.names = c('Gruppe','$\\\\bar{y}_j$', '$s_j$', '$\\\\Delta_{j-A}$'),\n               digits = 2,\n               format = 'latex',\n               escape=F,\n               caption=\"Gruppenmittelwerte, Standardabweichung und Unterschiede zu Stufe A\")\n```\n\n\n## Reaktionszeitexperiment als lineares Modell\n\n### Modell\n\n$$\ny_i = \\mu_A + \\Delta_{B-A} x_1 + \\Delta_{C-A} x_2 + \\Delta_{D-A} x_3 + \\epsilon_i\n$$\n\n### Dummyvariablen\n```{r}\nmat <- contrasts(data$group)\ncolnames(mat) <- c('x1','x2','x3')\nknitr::kable(mat, booktabs=TRUE, format='latex') |>\n  kableExtra::kable_styling(position = 'center')\n```\n\n## Nochmal allgemeiner\n\n\\begin{table}[]\n    \\centering\n    \\begin{tabular}{lcccc}\n    \\toprule\n         & $x_1$ & $x_2$ & $\\ldots$ & $x_{K-1}$ \\\\\n    \\midrule\n    Referenz ($j=1$) & 0 & 0 &  & 0 \\\\\n    $j=2$ & 1 & 0 & $\\ldots$  & 0 \\\\\n    $j=3$ & 0 & 1 & $\\ldots$  & 0 \\\\\n    $j=K$ & 0 & 0 & $\\ldots$  & 1 \\\\\n    \\bottomrule\n    \\end{tabular}\n\\end{table}\n\nMit $K$ Faktorstufen werden (K-1) Dummyvariablen $x_1, x_2, \\ldots, x_{K-1}$ benötigt. Eine Stufe wird als Referenz definiert. Die $x_1$ bis $x_{K-1}$ kodieren die Abweichungen der anderen Stufen von dieser Stufe.^[Diese Art der Kodierung wird auch als treatment Kodierung bezeichnet.]\n\n\n## Reaktionszeitexperiment mit `lm()`\n```{r}\n#| echo: true\n#| eval: false\n\nmod <- lm(rt ~ group, data)\n```\n\n```{r}\nmod <- lm(rt ~ group, data)\nlm_tbl_knitr(mod)\n```\n\\label{slide:rs}\n\n## Ausblick\n```{r}\n#| echo: true\n#| eval: false\n\nanova(mod)\n```\n\n```{r}\nlm_anova_tbl_knitr(anova(mod), caption = \"ANOVA-Tabelle\")\n```\n\n## Kombination von kontinuierlichen und nominalen Variablen\n\n```{r}\n#| fig.cap: \"Hypothetische Leistungsentwicklung in Abhängigkeit vom Alter und Gender\"\n\nN <- 50\nset.seed(1)\nlew <- tibble::tibble(\n  ta = sample(10, N, replace=T),\n  gender = sample(0:1, N, replace=T),\n  perf = rnorm(N, 30, 3) + 2 * ta + 10*gender,\n  gender_f = factor(gender, levels = c(1,0), labels=c('f','m'))\n)\nggplot(lew, aes(ta, perf, color = gender_f)) +\n  geom_point(size=2) +\n  labs(x = 'Trainingsalter', y = 'Performance') +\n  scale_color_discrete('Gender') \n```\n\n\n## Modellansatz \n\n- Aus gender (K = 2) wird eine **Dummyvariable**\n- Frauen werden (zufällig) als Referenz genommen \n\n\\begin{align*}\nY_i &= \\beta_{ta = 0,x_1=0} + \\Delta_m \\times x_1 + \\beta_{ta} \\times ta + \\epsilon_i \\\\\nx_1 &= \n\\begin{cases}\n0\\text{ wenn weiblich}\\\\\n1\\text{ wenn männlich}\n\\end{cases} \\\\\n\\end{align*}\n\n\n## Modellieren mit `lm()`\n```{r}\n#| echo: true\n#| eval: false\n\nmod <- lm(perf ~ gender_f + ta, lew)\n```\n```{r}\nmod <- lm(perf ~ gender_f + ta, lew)\nlm_tbl_knitr(mod, add_sigma = T, long = F)\n```\n\n\n## Die resultierenden Graden\n\n```{r}\n#| fig.cap: \"Leistungsentwicklung in Abhängigkeit vom Alter und Gender\"\n\nnew_lew <- data.frame(ta = c(1,10,1,10),\n           gender_f = factor(c(0,0,1,1),\n                             levels=0:1,\n                             labels=c('f','m')))\nnew_lew <- new_lew |> dplyr::mutate(y_hat=predict(mod, new_lew))\nggplot(lew, aes(ta, perf, color = gender_f)) + geom_point() +\n  geom_line(data = new_lew, aes(y = y_hat)) +\n  labs(x = 'Trainingsalter', y = 'Performance') +\n  scale_color_discrete('Gender') \n```\n\n## Interaktion zwischen kontinuierlichen und nominalen Variablen\n\n```{r}\n#| fig.cap: \"Leistungsentwicklung in Abhängigkeit vom Alter und Gender\"\n\nN <- 50\nset.seed(1)\nlew <- tibble::tibble(\n  ta = sample(10, N, replace=T),\n  gender = sample(0:1, N, replace=T),\n  perf = rnorm(N, 30, 3) + 2 * ta + 10*gender + 2*ta*gender,\n  gender_f = factor(gender, levels = c(0,1), labels=c('f','m'))\n)\nggplot(lew, aes(ta, perf, color = gender_f)) +\n  geom_point(size=2) +\n  labs(x = 'Trainingsalter', y = 'Performance') +\n  scale_color_discrete('Gender') \n```\n\n## Ansatz für ein Interaktionsmodell\n\nDas vorhergehendes Modell wird um einen Interaktionsterm erweitert.\n\n$$\ny_i = \\beta_{ta=0,x_1=0} + \\Delta_m \\times x_1 + \\beta_{ta} \\times ta + \\beta_{ta \\times gender} \\times x_1 \\times ta + \\epsilon_i\n$$\n\n## Interaktionsmodell mit `lm()`\n\n```{r}\n#| echo: true\n#| eval: false\n\nmod <- lm(perf ~ gender_f * ta, lew)\n```\n```{r}\nmod <- lm(perf ~ gender_f * ta, lew)\nlm_tbl_knitr(mod, add_sigma = T, long = F)\n```\n\n\n## Regressionsgeraden\n\n```{r}\n#| fig.cap: \"Leistungsentwicklung in Abhängigkeit vom Alter und Gender\"\n\nnew_lew <- data.frame(ta = c(1,10,1,10),\n           gender_f = factor(c(0,0,1,1),\n                             levels=0:1,\n                             labels=c('f','m')))\nnew_lew <- new_lew |> dplyr::mutate(y_hat = predict(mod,new_lew))\nggplot(lew, aes(ta, perf, color = gender_f)) +\n  geom_point() +\n  geom_line(data = new_lew, aes(y = y_hat)) +\n  labs(x = 'Trainingsalter', y = 'Performance') +\n  scale_color_discrete('Gender') \n```\n\n\n\n## Zum Nacharbeiten\n\n@kutner2005 [p.313-319] \\newline\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"mlm_dummy_coding.html"},"language":{},"metadata":{"lang":"de","fig-responsive":true,"quarto-version":"1.2.258","bibliography":["bibliography.bib"],"theme":"cosmo","callout-icon":true},"extensions":{"book":{"multiFile":true}}},"pdf":{"execute":{"fig-width":5.5,"fig-height":4,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","include-in-header":{"text":"\\usepackage{makeidx,multirow}\n\\makeindex\n"},"include-after-body":{"text":"\\printindex\n"},"output-file":"mlm_dummy_coding.pdf"},"language":{},"metadata":{"block-headings":true,"bibliography":["bibliography.bib"],"documentclass":"scrreprt"},"extensions":{"book":{}}}}}